{"Issues":[{"FromLinter":"decorder","Text":"multiple \"var\" declarations are not allowed; use parentheses instead","Severity":"error","SourceLines":["var glyphRef = map[string]string{ // Maps are reference types, so they are always passed by reference. You don't need a pointer."],"Pos":{"Filename":"constants.go","Offset":1381,"Line":21,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"decorder","Text":"type must not be placed after const (desired order: type,const,var,func)","Severity":"error","SourceLines":["type card struct {"],"Pos":{"Filename":"constants.go","Offset":1860,"Line":34,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"decorder","Text":"type must not be placed after const (desired order: type,const,var,func)","Severity":"error","SourceLines":["type player struct {"],"Pos":{"Filename":"constants.go","Offset":2994,"Line":51,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"decorder","Text":"multiple \"type\" declarations are not allowed; use parentheses instead","Severity":"error","SourceLines":["type player struct {"],"Pos":{"Filename":"constants.go","Offset":2994,"Line":51,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"exhaustruct","Text":"main.card is missing fields suitedName, noSuitName, suitPlural, suitSingle, rankPip, suitPip, suitPipUC, suitRank, rankInSuit","Severity":"error","SourceLines":["\t\tc := card{idx: i}"],"Pos":{"Filename":"cards.go","Offset":148,"Line":11,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"exhaustruct","Text":"main.player is missing fields name, hand, handScore, handDesc, wins, losses","Severity":"error","SourceLines":["\t\tp := player{idx: i}"],"Pos":{"Filename":"main.go","Offset":251,"Line":12,"Column":8},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoglobals","Text":"names is a global variable","Severity":"error","SourceLines":["\tnames       = []string{\"Arthur\", \"Betty\", \"Charlie\", \"Denise\", \"Eddie\", \"Fran\", \"George\", \"Henrietta\"}"],"Pos":{"Filename":"constants.go","Offset":187,"Line":11,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoglobals","Text":"rankBySuit is a global variable","Severity":"error","SourceLines":["\trankBySuit  = map[string]int{\"Club\": 1, \"Diamond\": 2, \"Heart\": 3, \"Spade\": 4, \"Joker\": 5}"],"Pos":{"Filename":"constants.go","Offset":292,"Line":12,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoglobals","Text":"suitedNames is a global variable","Severity":"error","SourceLines":["\tsuitedNames = [52]string{"],"Pos":{"Filename":"constants.go","Offset":384,"Line":13,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gochecknoglobals","Text":"glyphRef is a global variable","Severity":"error","SourceLines":["var glyphRef = map[string]string{ // Maps are reference types, so they are always passed by reference. You don't need a pointer."],"Pos":{"Filename":"constants.go","Offset":1385,"Line":21,"Column":5},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gosec","Text":"G404: Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)","Severity":"error","SourceLines":["\tcardDrawn := theDeck[rand.IntN(len(theDeck))]"],"Pos":{"Filename":"cards.go","Offset":0,"Line":39,"Column":23},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"intrange","Text":"for loop can be changed to use an integer range (Go 1.22+)","Severity":"error","SourceLines":["\t\tfor i := 0; i \u003c len(deck); i++ {"],"Pos":{"Filename":"logging.go","Offset":1025,"Line":25,"Column":3},"SuggestedFixes":[{"Message":"Replace loop with `i := range len(deck)`","TextEdits":[{"Pos":1029,"End":1055,"NewText":"aSA6PSByYW5nZSBsZW4oZGVjayk="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"intrange","Text":"for loop can be changed to use an integer range (Go 1.22+)","Severity":"error","SourceLines":["\tfor i := 0; i \u003c numberOfPlayers; i++ {"],"Pos":{"Filename":"main.go","Offset":204,"Line":11,"Column":2},"SuggestedFixes":[{"Message":"Replace loop with `i := range numberOfPlayers`","TextEdits":[{"Pos":208,"End":240,"NewText":"aSA6PSByYW5nZSBudW1iZXJPZlBsYXllcnM="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nlreturn","Text":"return with no blank line before","Severity":"error","SourceLines":["\treturn theDeck, cardsDealt[:]"],"Pos":{"Filename":"cards.go","Offset":897,"Line":35,"Column":2},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":897,"End":897,"NewText":"Cg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nlreturn","Text":"return with no blank line before","Severity":"error","SourceLines":["\treturn theDeck, cardDrawn"],"Pos":{"Filename":"cards.go","Offset":1074,"Line":41,"Column":2},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1074,"End":1074,"NewText":"Cg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nlreturn","Text":"return with no blank line before","Severity":"error","SourceLines":["\treturn theDeck"],"Pos":{"Filename":"cards.go","Offset":1350,"Line":48,"Column":2},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1350,"End":1350,"NewText":"Cg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nlreturn","Text":"return with no blank line before","Severity":"error","SourceLines":["\treturn -1 // no card found"],"Pos":{"Filename":"cards.go","Offset":1533,"Line":57,"Column":2},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1533,"End":1533,"NewText":"Cg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"nlreturn","Text":"return with no blank line before","Severity":"error","SourceLines":["\treturn 0"],"Pos":{"Filename":"logging.go","Offset":1339,"Line":40,"Column":2},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1339,"End":1339,"NewText":"Cg=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"package-comments: should have a package comment","Severity":"error","SourceLines":["package main"],"Pos":{"Filename":"cards.go","Offset":0,"Line":1,"Column":1},"LineRange":{"From":1,"To":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"modifies-parameter: parameter 'theDeck' seems to be modified","Severity":"error","SourceLines":["\t\ttheDeck, currentCard = pickACard(theDeck)"],"Pos":{"Filename":"cards.go","Offset":771,"Line":31,"Column":3},"LineRange":{"From":31,"To":31},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"modifies-parameter: parameter 'theDeck' seems to be modified","Severity":"error","SourceLines":["\ttheDeck = removeCard(theDeck, cardDrawn)"],"Pos":{"Filename":"cards.go","Offset":1031,"Line":40,"Column":2},"LineRange":{"From":40,"To":40},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"var-declaration: should omit type int from declaration of var idx; it will be inferred from the right-hand side","Severity":"error","SourceLines":["\tvar idx int = findCardIndex(theDeck, cardToRemove)"],"Pos":{"Filename":"cards.go","Offset":1176,"Line":45,"Column":10},"LineRange":{"From":45,"To":45},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"modifies-parameter: parameter 'theDeck' seems to be modified","Severity":"error","SourceLines":["\ttheDeck = theDeck[:len(theDeck)-1]     // then lop it off - fast"],"Pos":{"Filename":"cards.go","Offset":1283,"Line":47,"Column":2},"LineRange":{"From":47,"To":47},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"stylecheck","Text":"ST1023: should omit type int from declaration; it will be inferred from the right-hand side","Severity":"error","SourceLines":["\tvar idx int = findCardIndex(theDeck, cardToRemove)"],"Pos":{"Filename":"cards.go","Offset":1176,"Line":45,"Column":10},"SuggestedFixes":[{"Message":"Remove redundant type","TextEdits":[{"Pos":1176,"End":1179,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"var `names` is unused","Severity":"error","SourceLines":["\tnames       = []string{\"Arthur\", \"Betty\", \"Charlie\", \"Denise\", \"Eddie\", \"Fran\", \"George\", \"Henrietta\"}"],"Pos":{"Filename":"constants.go","Offset":187,"Line":11,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `name` is unused","Severity":"error","SourceLines":["\tname      string"],"Pos":{"Filename":"constants.go","Offset":3033,"Line":53,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `handScore` is unused","Severity":"error","SourceLines":["\thandScore int"],"Pos":{"Filename":"constants.go","Offset":3071,"Line":55,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `handDesc` is unused","Severity":"error","SourceLines":["\thandDesc  string"],"Pos":{"Filename":"constants.go","Offset":3087,"Line":56,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `wins` is unused","Severity":"error","SourceLines":["\twins      int"],"Pos":{"Filename":"constants.go","Offset":3106,"Line":57,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `losses` is unused","Severity":"error","SourceLines":["\tlosses    int"],"Pos":{"Filename":"constants.go","Offset":3122,"Line":58,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""}],"Report":{"Linters":[{"Name":"asasalint","Enabled":true},{"Name":"asciicheck","Enabled":true},{"Name":"bidichk","Enabled":true},{"Name":"bodyclose","Enabled":true},{"Name":"canonicalheader"},{"Name":"containedctx","Enabled":true},{"Name":"contextcheck","Enabled":true},{"Name":"copyloopvar","Enabled":true},{"Name":"cyclop"},{"Name":"decorder","Enabled":true},{"Name":"deadcode"},{"Name":"depguard","Enabled":true},{"Name":"dogsled","Enabled":true},{"Name":"dupl","Enabled":true},{"Name":"dupword","Enabled":true},{"Name":"durationcheck","Enabled":true},{"Name":"errcheck","Enabled":true,"EnabledByDefault":true},{"Name":"errchkjson","Enabled":true},{"Name":"errname","Enabled":true},{"Name":"errorlint","Enabled":true},{"Name":"execinquery"},{"Name":"exhaustive","Enabled":true},{"Name":"exhaustivestruct"},{"Name":"exhaustruct","Enabled":true},{"Name":"exportloopref"},{"Name":"exptostd"},{"Name":"forbidigo","Enabled":true},{"Name":"forcetypeassert","Enabled":true},{"Name":"fatcontext"},{"Name":"funlen"},{"Name":"gci","Enabled":true},{"Name":"ginkgolinter","Enabled":true},{"Name":"gocheckcompilerdirectives","Enabled":true},{"Name":"gochecknoglobals","Enabled":true},{"Name":"gochecknoinits","Enabled":true},{"Name":"gochecksumtype"},{"Name":"gocognit"},{"Name":"goconst","Enabled":true},{"Name":"gocritic"},{"Name":"gocyclo"},{"Name":"godot"},{"Name":"godox"},{"Name":"err113","Enabled":true},{"Name":"gofmt","Enabled":true},{"Name":"gofumpt","Enabled":true},{"Name":"goheader","Enabled":true},{"Name":"goimports","Enabled":true},{"Name":"golint"},{"Name":"mnd"},{"Name":"gomnd"},{"Name":"gomoddirectives","Enabled":true},{"Name":"gomodguard","Enabled":true},{"Name":"goprintffuncname","Enabled":true},{"Name":"gosec","Enabled":true},{"Name":"gosimple","Enabled":true,"EnabledByDefault":true},{"Name":"gosmopolitan"},{"Name":"govet","Enabled":true,"EnabledByDefault":true},{"Name":"grouper","Enabled":true},{"Name":"ifshort"},{"Name":"iface"},{"Name":"importas","Enabled":true},{"Name":"inamedparam"},{"Name":"ineffassign","Enabled":true,"EnabledByDefault":true},{"Name":"interfacebloat","Enabled":true},{"Name":"interfacer"},{"Name":"intrange","Enabled":true},{"Name":"ireturn","Enabled":true},{"Name":"lll"},{"Name":"loggercheck","Enabled":true},{"Name":"maintidx","Enabled":true},{"Name":"makezero","Enabled":true},{"Name":"maligned"},{"Name":"mirror","Enabled":true},{"Name":"misspell","Enabled":true},{"Name":"musttag","Enabled":true},{"Name":"nakedret","Enabled":true},{"Name":"nestif"},{"Name":"nilerr","Enabled":true},{"Name":"nilnesserr"},{"Name":"nilnil","Enabled":true},{"Name":"nlreturn","Enabled":true},{"Name":"noctx","Enabled":true},{"Name":"nonamedreturns","Enabled":true},{"Name":"nosnakecase"},{"Name":"nosprintfhostport","Enabled":true},{"Name":"paralleltest","Enabled":true},{"Name":"perfsprint","Enabled":true},{"Name":"prealloc","Enabled":true},{"Name":"predeclared","Enabled":true},{"Name":"promlinter","Enabled":true},{"Name":"protogetter"},{"Name":"reassign","Enabled":true},{"Name":"recvcheck"},{"Name":"revive","Enabled":true},{"Name":"rowserrcheck","Enabled":true},{"Name":"sloglint","Enabled":true},{"Name":"scopelint"},{"Name":"sqlclosecheck","Enabled":true},{"Name":"spancheck"},{"Name":"staticcheck","Enabled":true,"EnabledByDefault":true},{"Name":"structcheck"},{"Name":"stylecheck","Enabled":true},{"Name":"tagalign","Enabled":true},{"Name":"tagliatelle","Enabled":true},{"Name":"tenv","Enabled":true},{"Name":"testableexamples","Enabled":true},{"Name":"testifylint","Enabled":true},{"Name":"testpackage","Enabled":true},{"Name":"thelper","Enabled":true},{"Name":"tparallel","Enabled":true},{"Name":"typecheck","Enabled":true,"EnabledByDefault":true},{"Name":"unconvert","Enabled":true},{"Name":"unparam","Enabled":true},{"Name":"unused","Enabled":true,"EnabledByDefault":true},{"Name":"usestdlibvars","Enabled":true},{"Name":"usetesting"},{"Name":"varcheck"},{"Name":"varnamelen"},{"Name":"wastedassign","Enabled":true},{"Name":"whitespace","Enabled":true},{"Name":"wrapcheck","Enabled":true},{"Name":"wsl"},{"Name":"zerologlint"},{"Name":"nolintlint","Enabled":true}]}}
