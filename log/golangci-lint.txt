[1mcards.go:14[22m:8: [31mmain.card is missing fields suitedName, noSuitName, suitPlural, suitSingle, rankPip, suitPip, suitPipUC, suitRank, rankInSuit[0m (exhaustruct)
		c := card{idx: i}
		     [33m^[0m
[1mmain.go:18[22m:8: [31mmain.player is missing fields name, hand, handScore, handDesc, wins, losses[0m (exhaustruct)
		p := player{idx: i}
		     [33m^[0m
[1mcards.go:47[22m:23: [31mG404: Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)[0m (gosec)
	cardDrawn := theDeck[rand.IntN(len(theDeck))]
	                     [33m^[0m
[1mlogging.go:27[22m:3: [31mfor loop can be changed to use an integer range (Go 1.22+)[0m (intrange)
		for i := 0; i < len(deck); i++ {
		[33m^[0m
[1mmain.go:17[22m:2: [31mfor loop can be changed to use an integer range (Go 1.22+)[0m (intrange)
	for i := 0; i < numberOfPlayers; i++ {
	[33m^[0m
[1mlogging.go:42[22m:2: [31mreturn with no blank line before[0m (nlreturn)
	return 0
	[33m^[0m
[1mconstants.go:23[22m:3: [31mfield `name` is unused[0m (unused)
		name      string
		[33m^[0m
[1mconstants.go:25[22m:3: [31mfield `handScore` is unused[0m (unused)
		handScore int
		[33m^[0m
[1mconstants.go:26[22m:3: [31mfield `handDesc` is unused[0m (unused)
		handDesc  string
		[33m^[0m
[1mconstants.go:27[22m:3: [31mfield `wins` is unused[0m (unused)
		wins      int
		[33m^[0m
[1mconstants.go:28[22m:3: [31mfield `losses` is unused[0m (unused)
		losses    int
		[33m^[0m
[1mconstants.go:40[22m:2: [31mvar `names` is unused[0m (unused)
	names       = []string{"Arthur", "Betty", "Charlie", "Denise", "Eddie", "Fran", "George", "Henrietta"}
	[33m^[0m
[1mlogging.go:27[22m:3: [31mfor statements should only be cuddled with assignments used in the iteration[0m (wsl)
		for i := 0; i < len(deck); i++ {
		[33m^[0m
[1mlogging.go:30[22m:5: [31mif statements should only be cuddled with assignments used in the if statement itself[0m (wsl)
				if i%6 == 0 {
				[33m^[0m
[1mlogging.go:33[22m:5: [31mif statements should only be cuddled with assignments[0m (wsl)
				if len(c.suitedName) > 15 {
				[33m^[0m
[1mlogging.go:41[22m:2: [31mexpressions should not be cuddled with blocks[0m (wsl)
	fmt.Print("\n")
	[33m^[0m
[1mlogging.go:42[22m:2: [31mreturn statements should not be cuddled if block has more than two lines[0m (wsl)
	return 0
	[33m^[0m
